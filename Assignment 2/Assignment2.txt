==================================================================
Create K8s cluster on your machines-Done
==================================================================
[node1 ~]$ kubeadm --help

    ┌──────────────────────────────────────────────────────────┐
    │ KUBEADM                                                  │
    │ Easily bootstrap a secure Kubernetes cluster             │
    │                                                          │
    │ Please give us feedback at:                              │
    │ https://github.com/kubernetes/kubeadm/issues             │    └──────────────────────────────────────────────────────────┘

Example usage:

    Create a two-machine cluster with one control-plane node    (which controls the cluster), and one worker node
    (where your workloads, like Pods and Deployments run).

    ┌──────────────────────────────���───────────────────────────┐
    │ On the first machine:                                    │
    ├──────────────────────────────────────────────────────────┤
    │ control-plane# kubeadm init                              │    └──────────────────────────────────────────────────────────┘
    ┌──────────────────────────────────────────────────────────┐
    │ On the second machine:                                   │
    ├─────────────────────────────────────────────────────���────┤
    │ worker# kubeadm join <arguments-returned-from-init>      │
    └──────────────────────────────────────────────────────────┘

    You can then repeat the second step on as many other machines as you like.

Usage:
  kubeadm [command]

Available Commands:
  alpha       Kubeadm experimental sub-commands
  completion  Output shell completion code for the specified shell (bash or zsh).
  config      Manage configuration for a kubeadm cluster persisted in a ConfigMap in the cluster.
  help        Help about any command
  init        Run this command in order to set up the Kubernetes control plane.
  join        Run this on any machine you wish to join an existing cluster
  reset       Run this to revert any changes made to this host by 'kubeadm init' or 'kubeadm join'.
  token       Manage bootstrap tokens.
  upgrade     Upgrade your cluster smoothly to a newer version with this command.
  version     Print the version of kubeadm

Flags:
  -h, --help              help for kubeadm
      --log-file string   If non-empty, use this log file
      --rootfs string     [EXPERIMENTAL] The path to the 'real' host root filesystem.
      --skip-headers      If true, avoid header prefixes in the log messages
  -v, --v Level           number for the log level verbosity

Use "kubeadm [command] --help" for more information about a command.
RTNETLINK answers: File exists
==================================================================

==================================================================
Setup dashboard and explore K8s components - Done
==================================================================

==================================================================
Explore ‘kubectl’ command and various verbs - Done
==================================================================
[node1 ~]$ kubectl --help
kubectl controls the Kubernetes cluster manager.

 Find more information at: https://kubernetes.io/docs/reference/kubectl/overview/

Basic Commands (Beginner):
  create         Create a resource from a file or from stdin.
  expose         Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service
  run            Run a particular image on the cluster
  set            Set specific features on objects

Basic Commands (Intermediate):
  explain        Documentation of resources
  get            Display one or many resources
  edit           Edit a resource on the server
  delete         Delete resources by filenames, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout        Manage the rollout of a resource
  scale          Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job
  autoscale      Auto-scale a Deployment, ReplicaSet, or ReplicationController

Cluster Management Commands:
  certificate    Modify certificate resources.
  cluster-info   Display cluster info
  top            Display Resource (CPU/Memory/Storage) usage.
  cordon         Mark node as unschedulable
  uncordon       Mark node as schedulable
  drain          Drain node in preparation for maintenance
  taint          Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe       Show details of a specific resource or group of resources
  logs           Print the logs for a container in a pod
  attach         Attach to a running container
  exec           Execute a command in a container
  port-forward   Forward one or more local ports to a pod
  proxy          Run a proxy to the Kubernetes API server
  cp             Copy files and directories to and from containers.
  auth           Inspect authorization

Advanced Commands:
  diff           Diff live version against would-be applied version
  apply          Apply a configuration to a resource by filename or stdin
  patch          Update field(s) of a resource using strategic merge patch
  replace        Replace a resource by filename or stdin
  wait           Experimental: Wait for a specific condition on one or many resources.
  convert        Convert config files between different API versions
  kustomize      Build a kustomization target from a directory or a remote url.

Settings Commands:
  label          Update the labels on a resource
  annotate       Update the annotations on a resource
  completion     Output shell completion code for the specified shell (bash or zsh)

Other Commands:
  api-resources  Print the supported API resources on the server
  api-versions   Print the supported API versions on the server, in the form of "group/version"
  config         Modify kubeconfig files
  plugin         Provides utilities for interacting with plugins.
  version        Print the client and server version information

Usage:
  kubectl [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
==================================================================


==================================================================
Enable K8s debugging and list down component-wise logs for “pod creation” - Done
==================================================================
[node1 ~]$ kubectl get nodes
NAME    STATUS   ROLES    AGE   VERSION
node1   Ready    master   12m   v1.14.9
node2   Ready    <none>   64s   v1.14.9

[node1 ~]$ kubectl get pods
NAME                        READY   STATUS    RESTARTS   AGE
my-nginx-756d9fd5f9-ht82r   1/1     Running   0          22s
my-nginx-756d9fd5f9-lklst   1/1     Running   0          22s
my-nginx-756d9fd5f9-x5ctg   1/1     Running   0          22s

[node1 ~]$ kubectl get pods
NAME                        READY   STATUS    RESTARTS   AGE
my-nginx-756d9fd5f9-ht82r   1/1     Running   0          16m
my-nginx-756d9fd5f9-lklst   1/1     Running   0          16m
my-nginx-756d9fd5f9-x5ctg   1/1     Running   0          16m
[node1 ~]$ kubectl describe pods my-nginx-756d9fd5f9-ht82r
Name:               my-nginx-756d9fd5f9-ht82r
Namespace:          default
Priority:           0
PriorityClassName:  <none>
Node:               node2/192.168.0.22
Start Time:         Mon, 20 Apr 2020 17:06:39 +0000
Labels:             app=nginx
                    pod-template-hash=756d9fd5f9
Annotations:        <none>
Status:             Running
IP:                 10.44.0.1
Controlled By:      ReplicaSet/my-nginx-756d9fd5f9
Containers:
  nginx:
    Container ID:   docker://a53b85ba3380035e0cf101fa10416cc497042d71879ec7b417cf037da1bafc92
    Image:          nginx:1.14.2
    Image ID:       docker-pullable://nginx@sha256:f7988fb6c02e0ce69257d9bd9cf37ae20a60f1df7563c3a2a6abe24160306b8d
    Port:           80/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Mon, 20 Apr 2020 17:06:49 +0000
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-kxthv (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  default-token-kxthv:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-kxthv
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  16m   default-scheduler  Successfully assigned default/my-nginx-756d9fd5f9-ht82r to node2
  Normal  Pulling    16m   kubelet, node2     Pulling image "nginx:1.14.2"
  Normal  Pulled     16m   kubelet, node2     Successfully pulled image "nginx:1.14.2"
  Normal  Created    16m   kubelet, node2     Created container nginx
  Normal  Started    16m   kubelet, node2     Started container nginx
==================================================================